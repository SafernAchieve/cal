{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport IterResult from './iterresult';\n/**\n * IterResult subclass that calls a callback function on each add,\n * and stops iterating when the callback returns false.\n */\nvar CallbackIterResult = /** @class */function (_super) {\n  __extends(CallbackIterResult, _super);\n  function CallbackIterResult(method, args, iterator) {\n    var _this = _super.call(this, method, args) || this;\n    _this.iterator = iterator;\n    return _this;\n  }\n  CallbackIterResult.prototype.add = function (date) {\n    if (this.iterator(date, this._result.length)) {\n      this._result.push(date);\n      return true;\n    }\n    return false;\n  };\n  return CallbackIterResult;\n}(IterResult);\nexport default CallbackIterResult;","map":{"version":3,"names":["IterResult","CallbackIterResult","_super","__extends","method","args","iterator","_this","call","prototype","add","date","_result","length","push"],"sources":["../../src/callbackiterresult.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAwB,MAAM,cAAc;AAInD;;;;AAIA,IAAAC,kBAAA,0BAAAC,MAAA;EAAgDC,SAAA,CAAAF,kBAAA,EAAAC,MAAA;EAG9C,SAAAD,mBACEG,MAAyB,EACzBC,IAAuB,EACvBC,QAAkB;IAHpB,IAAAC,KAAA,GAKEL,MAAA,CAAAM,IAAA,OAAMJ,MAAM,EAAEC,IAAI,CAAC;IAEnBE,KAAI,CAACD,QAAQ,GAAGA,QAAQ;;EAC1B;EAEAL,kBAAA,CAAAQ,SAAA,CAAAC,GAAG,GAAH,UAAKC,IAAU;IACb,IAAI,IAAI,CAACL,QAAQ,CAACK,IAAI,EAAE,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,EAAE;MAC5C,IAAI,CAACD,OAAO,CAACE,IAAI,CAACH,IAAI,CAAC;MACvB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd,CAAC;EACH,OAAAV,kBAAC;AAAD,CAAC,CApB+CD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}